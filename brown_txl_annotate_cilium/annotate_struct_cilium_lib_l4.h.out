#ifndef __LIB_L4_H_
#define __LIB_L4_H_
#include <linux/tcp.h>
#include <linux/udp.h>
#include "common.h"
#include "dbg.h"
#include "csum.h"
#define TCP_DPORT_OFF (offsetof(struct tcphdr, dest))
#define TCP_SPORT_OFF (offsetof(struct tcphdr, source))
#define UDP_DPORT_OFF (offsetof(struct udphdr, dest))
#define UDP_SPORT_OFF (offsetof(struct udphdr, source))

static __always_inline int l4_modify_port (struct __ctx_buff *ctx, int l4_off, int off, struct csum_offset *csum_off, __be16 port, __be16 old_port) {
    if (csum_l4_replace (ctx, l4_off, csum_off, old_port, port, sizeof (port)) < 0)
        return DROP_CSUM_L4;
    if (ctx_store_bytes (ctx, l4_off +off, &port, sizeof (port), 0) < 0)
        return DROP_WRITE_ERROR;
    return 0;
}

static __always_inline int l4_load_port (struct __ctx_buff *ctx, int off, __be16 *port) {
    return ctx_load_bytes (ctx, off, port, sizeof (__be16));
}
#endif

