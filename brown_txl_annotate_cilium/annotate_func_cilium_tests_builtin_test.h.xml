<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static __always_inline __u32 __cmp_mem (const void *x, const void *y, __u32 len)" startline="9" endline="20">
static __always_inline __u32 __cmp_mem (const void *x, const void *y, __u32 len) {
    const __u8 *x8 = x, *y8 = y;
    __u32 i;
    for (i = 0; i < len; i++) {
        if (x8[i] != y8[i])
            return 1;
    }
    return 0;
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static __always_inline void __cpy_mem (void *d, void *s, __u32 len)" startline="22" endline="29">
static __always_inline void __cpy_mem (void *d, void *s, __u32 len) {
    __u8 *d8 = d, *s8 = s;
    __u32 i;
    for (i = 0; i < len; i++)
        d8[i] = s8[i];
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static void __fill_rnd (void *buff, __u32 len)" startline="31" endline="38">
static void __fill_rnd (void *buff, __u32 len) {
    __u8 *dest = buff;
    __u32 i;
    for (i = 0; i < len; i++)
        dest[i] = random ();
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static __always_inline bool __corrupt_mem (void *d, __u32 len)" startline="40" endline="49">
static __always_inline bool __corrupt_mem (void *d, __u32 len) {
    bool corrupted = random () % 2 == 1;
    __u32 pos = random () % len;
    __u8 *d8 = d;
    if (corrupted)
        d8[pos]++;
    return corrupted;
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static void __fill_cnt (void *buff, __u32 len)" startline="51" endline="58">
static void __fill_cnt (void *buff, __u32 len) {
    __u8 *dest = buff;
    __u32 i, cnt = 0;
    for (i = 0; i < len; i++)
        dest[i] = cnt++;
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static void test___builtin_memzero (void)" startline="73" endline="77">
static void test___builtin_memzero (void) {
#include "builtin_memzero.h"
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static void test___builtin_memcpy (void)" startline="95" endline="99">
static void test___builtin_memcpy (void) {
#include "builtin_memcpy.h"
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static void test___builtin_memcmp (void)" startline="115" endline="123">
static void test___builtin_memcmp (void) {
    int i;
    for (i = 0; i < 100; i++) {
#include "builtin_memcmp.h"
    }
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/builtin_test.h" funcheader="static void test___builtin_memmove (void)" startline="195" endline="202">
static void test___builtin_memmove (void) {
#include "builtin_memmove.h"
}
</source>
</doc>
