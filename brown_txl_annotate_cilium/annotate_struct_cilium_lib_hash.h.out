#ifndef __HASH_H_
#define __HASH_H_
#include "common.h"
#include "jhash.h"

static __always_inline __u32 hash_from_tuple_v4 (const struct ipv4_ct_tuple *tuple) {
    return jhash_3words (tuple->saddr, ((__u32) tuple->dport << 16) | tuple->sport, tuple->nexthdr, HASH_INIT4_SEED);
}

static __always_inline __u32 hash_from_tuple_v6 (const struct ipv6_ct_tuple *tuple) {
    __u32 a, b, c;
    a = tuple->saddr.p1;
    b = tuple->saddr.p2;
    c = tuple->saddr.p3;
    __jhash_mix (a, b, c);
    a += tuple->saddr.p4;
    b += ((__u32) tuple->dport << 16) | tuple->sport;
    c += tuple->nexthdr;
    __jhash_mix (a, b, c);
    a += HASH_INIT6_SEED;
    __jhash_final (a, b, c);
    return c;
}
#endif /* __HASH_H_ */

