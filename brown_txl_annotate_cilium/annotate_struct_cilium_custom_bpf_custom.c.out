#include <bpf/ctx/skb.h>
#include <bpf/api.h>
#include "lib/common.h"
#define TO_STRING(X) #X
#define STRINGIFY(X) TO_STRING(X)
#ifndef BPF_CUSTOM_PROG_FILE
#define BPF_CUSTOM_PROG_FILE bytecount.h
#endif
#ifndef BPF_CUSTOM_PROG_NAME
#define BPF_CUSTOM_PROG_NAME custom
#endif
#include STRINGIFY(BPF_CUSTOM_PROG_FILE)

__section (STRINGIFY (BPF_CUSTOM_PROG_NAME))
int custom_hook (const struct __ctx_buff *ctx) {
    __u32 custom_meta = ctx_load_meta (ctx, CB_CUSTOM_CALLS);
    __u32 identity = custom_meta & 0xffffff;
    int ret = (custom_meta >> 24) & 0xff;
    custom_prog (ctx, identity);
    return ret;
}

