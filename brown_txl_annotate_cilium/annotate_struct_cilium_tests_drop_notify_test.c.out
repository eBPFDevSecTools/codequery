#include "common.h"
#define DROP_NOTIFY
#include "bpf/ctx/skb.h"
#include "node_config.h"
#include "lib/metrics.h"
void mock_tail_call (void * ctx, const void * map, __u32 index);
#define ep_tail_call(a, b) mock_tail_call(a, NULL, 0)
#include "lib/drop.h"
#undef ep_tail_call
static int __send_drop_notify_res;

void mock_tail_call (void *ctx, __maybe_unused const void *map, __maybe_unused __u32 index) {
    __send_drop_notify_res = __send_drop_notify (ctx);
}

CHECK ("tc", "send_drop_notify")
int test_send_drop_notify (struct __ctx_buff ctx) {
    test_init ();
    assert (! send_drop_notify (& ctx, 0, 0, 0, 0, 0, 0));
    assert (! __send_drop_notify_res);
    test_finish ();
}

BPF_LICENSE ("Dual BSD/GPL");
