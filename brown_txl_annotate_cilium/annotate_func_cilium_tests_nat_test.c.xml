<?xml version="1.0"?>
<doc>
<source file="/home/sayandes/codequery/cilium/tests/nat_test.c" funcheader="static __always_inline int mock_ct_lookup4 (__maybe_unused const void *map, __maybe_unused struct ipv4_ct_tuple *tuple, __maybe_unused struct __ctx_buff *ctx, __maybe_unused int off, __maybe_unused enum ct_dir dir, __maybe_unused struct ct_state *ct_state, __maybe_unused __u32 *monitor)" startline="52" endline="61">
static __always_inline int mock_ct_lookup4 (__maybe_unused const void *map, __maybe_unused struct ipv4_ct_tuple *tuple, __maybe_unused struct __ctx_buff *ctx, __maybe_unused int off, __maybe_unused enum ct_dir dir, __maybe_unused struct ct_state *ct_state, __maybe_unused __u32 *monitor) {
    return mock_ct_lookup4_response;
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/nat_test.c" funcheader="static __always_inline int mock_ct_create4 (__maybe_unused const void *map_main, __maybe_unused const void *map_related, __maybe_unused struct ipv4_ct_tuple *tuple, __maybe_unused struct __ctx_buff *ctx, __maybe_unused const int dir, __maybe_unused const struct ct_state *ct_state, __maybe_unused bool proxy_redirect, __maybe_unused bool from_l7lb)" startline="64" endline="74">
static __always_inline int mock_ct_create4 (__maybe_unused const void *map_main, __maybe_unused const void *map_related, __maybe_unused struct ipv4_ct_tuple *tuple, __maybe_unused struct __ctx_buff *ctx, __maybe_unused const int dir, __maybe_unused const struct ct_state *ct_state, __maybe_unused bool proxy_redirect, __maybe_unused bool from_l7lb) {
    return mock_ct_create4_response;
}
</source>
<source file="/home/sayandes/codequery/cilium/tests/nat_test.c" funcheader="CHECK (\"xdp\", \"nat\") int bpf_test (__maybe_unused struct xdp_md *ctx)" startline="79" endline="147">
CHECK ("xdp", "nat")
int bpf_test (__maybe_unused struct xdp_md *ctx) {
    test_init ();
    struct __ctx_buff ctx_buff;
    struct ipv4_ct_tuple tuple;
    struct ipv4_nat_entry state;
    struct ipv4_nat_target target;
    mock_ct_lookup4_response = -1;
    TEST ("return -1 on error", {if (snat_v4_track_local (& ctx_buff, & tuple, & state, NAT_DIR_EGRESS, 0, & target) != - 1) {test_fail ();}});
    mock_ct_lookup4_response = 1;
    TEST ("return 0 on track", {if (snat_v4_track_local (& ctx_buff, & tuple, & state, NAT_DIR_EGRESS, 0, & target) != 0) {test_fail ();}});
    mock_ct_lookup4_response = CT_NEW;
    mock_ct_create4_response = -1;
    TEST ("return -1 on create error", {if (snat_v4_track_local (& ctx_buff, & tuple, & state, NAT_DIR_EGRESS, 0, & target) != - 1) {test_fail ();}});
    mock_ct_lookup4_response = CT_NEW;
    mock_ct_create4_response = 0;
    TEST ("return 0 on create success", {if (snat_v4_track_local (& ctx_buff, & tuple, & state, NAT_DIR_EGRESS, 0, & target) != 0) {test_fail ();}});
    test_finish ();
}
</source>
</doc>
